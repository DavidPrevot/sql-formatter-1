# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Continuous Integration"

on:
  pull_request:
  push:
    branches:
      - "master"

jobs:

  unit-tests:
    name: "Unit tests"

    runs-on: "ubuntu-18.04"

    strategy:
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@1.8.1"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1.0.3"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: "Install dependencies with composer"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Test fixes"
        run: "vendor/bin/phpunit --coverage-text"

  coding-standards:
    name: "Coding Standards"

    runs-on: "ubuntu-18.04"

    strategy:
      matrix:
        php-version:
          - "7.2"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@1.8.1"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1.0.3"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies with composer"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Run squizlabs/php_codesniffer"
        run: "vendor/bin/phpcs"

  static-analysis-phpstan:
    name: Static Analysis with PHPStan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: PHPStan
        uses: "docker://oskarstark/phpstan-ga"
        env:
          REQUIRE_DEV: 'true'
        with:
          args: analyse

  static-analysis-psalm:
    name: Static Analysis with Psalm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Psalm
        uses: docker://vimeo/psalm-github-actions
